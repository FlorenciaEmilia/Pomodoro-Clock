{"version":3,"sources":["TimeControl.js","PomodoroContainer.js","App.js","serviceWorker.js","index.js"],"names":["TimeControl","props","handleIncrease","bind","handleDecrease","this","increase","decrease","controlType","title","toLowerCase","className","id","onClick","disabled","isPlaying","length","Component","audio","document","getElementById","PomodoroContainer","state","breakLength","sessionLength","sessionTotal","breakTotal","breakOn","increaseBreak","decreaseBreak","increaseSession","decreaseSession","playPause","timeReducer","totalTime","changeLength","reset","typeOfLength","action","newLength","setState","clearInterval","intervalID","pause","currentTime","setInterval","count","minutes","Math","floor","seconds","play","breakProps","sessionProps","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6UA8CeA,G,wDA1Cd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBAHJ,E,6DAOlBE,KAAKJ,MAAMK,a,uCAGXD,KAAKJ,MAAMM,a,+BAGX,IAAIC,EAAcH,KAAKJ,MAAMQ,MAAMC,cAEnC,OACC,yBAAKC,UAAU,eACd,wBAAIC,GAAE,UAAKJ,EAAL,WAA2BH,KAAKJ,MAAMQ,OAC5C,yBAAKG,GAAG,6BACP,4BACCA,GAAE,UAAKJ,EAAL,cACFK,QAASR,KAAKD,eACdU,SAAUT,KAAKJ,MAAMc,WAErB,uBAAGJ,UAAU,uBAEd,uBAAGC,GAAE,UAAKJ,EAAL,WAA2BG,UAAU,sBACxCN,KAAKJ,MAAMe,QAEb,4BACCJ,GAAE,UAAKJ,EAAL,cACFK,QAASR,KAAKH,eACdY,SAAUT,KAAKJ,MAAMc,WAErB,uBAAGJ,UAAU,2B,GAnCOM,cCCpBC,G,MAAQC,SAASC,eAAe,SAkLvBC,E,kDA/Kd,WAAYpB,GAAQ,IAAD,8BAClB,cAAMA,IACDqB,MAAQ,CACZC,YAAa,EACbC,cAAe,GACfC,aAAc,KACdC,WAAY,IACZC,SAAS,EACTZ,WAAW,GAEZ,EAAKa,cAAgB,EAAKA,cAAczB,KAAnB,gBACrB,EAAK0B,cAAgB,EAAKA,cAAc1B,KAAnB,gBACrB,EAAK2B,gBAAkB,EAAKA,gBAAgB3B,KAArB,gBACvB,EAAK4B,gBAAkB,EAAKA,gBAAgB5B,KAArB,gBACvB,EAAK6B,UAAY,EAAKA,UAAU7B,KAAf,gBAEjB,EAAK8B,YAAc,EAAKA,YAAY9B,KAAjB,gBAEnB,EAAK+B,UAAY,EAAKA,UAAU/B,KAAf,gBACjB,EAAKgC,aAAe,EAAKA,aAAahC,KAAlB,gBACpB,EAAKiC,MAAQ,EAAKA,MAAMjC,KAAX,gBApBK,E,yDAuBNkC,EAAcC,GAC1B,IAAIC,EAAYlC,KAAKiB,MAAMe,GACZ,cAAXC,GAA0BC,GAAa,GAC1CA,IACqB,cAAXD,GAA0BC,EAAY,GAChDA,IAGoB,gBAAjBF,EACHhC,KAAKmC,SAAS,CACbjB,YAAagB,EACbb,WAAwB,GAAZa,IAEc,kBAAjBF,GACVhC,KAAKmC,SAAS,CACbhB,cAAee,EACfd,aAA0B,GAAZc,M,sCAMhBlC,KAAK8B,aAAa,cAAe,e,sCAGjC9B,KAAK8B,aAAa,cAAe,e,wCAGjC9B,KAAK8B,aAAa,gBAAiB,e,wCAGnC9B,KAAK8B,aAAa,gBAAiB,e,8BAInC9B,KAAKmC,SAAS,CACbjB,YAAa,EACbC,cAAe,GACfC,aAAc,KACdC,WAAY,IACZC,SAAS,EACTZ,WAAW,IAEZ0B,cAAcpC,KAAKqC,YACnBxB,EAAMyB,QACNzB,EAAM0B,YAAc,I,6CAIpBH,cAAcpC,KAAKqC,c,kCAGdrC,KAAKiB,MAAMP,WAOf0B,cAAcpC,KAAKqC,YACnBrC,KAAKmC,SAAS,CACbzB,WAAW,MAPZV,KAAKqC,WAAaG,YAAYxC,KAAK4B,YAAa,KAChD5B,KAAKmC,SAAS,CACbzB,WAAW,O,gCAUJ+B,GACT,IAAIC,EAAUC,KAAKC,MAAMH,EAAQ,IAC7BI,EAAUJ,EAAQ,GAGtB,OAFAI,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EAEnC,GAAN,OADAH,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EACzC,YAAqBG,K,oCAGP,IAAD,EAC2D7C,KAAKiB,MAAvEC,EADO,EACPA,YAAaC,EADN,EACMA,cAAeG,EADrB,EACqBA,QAASF,EAD9B,EAC8BA,aAAcC,EAD5C,EAC4CA,WACpDC,EAYMA,IACND,EAAa,EAChBrB,KAAKmC,UAAS,SAAClB,GAAD,MAAY,CACzBI,WAAYJ,EAAMI,WAAa,MAEP,IAAfA,IACVrB,KAAKmC,UAAS,SAAClB,GAAD,MAAY,CACzBI,WAA0B,GAAdH,EACZI,SAAS,MAEVT,EAAMiC,SArBH1B,EAAe,EAClBpB,KAAKmC,UAAS,SAAClB,GAAD,MAAY,CACzBG,aAAcH,EAAMG,aAAe,MAET,IAAjBA,IACVpB,KAAKmC,UAAS,SAAClB,GAAD,MAAY,CACzBG,aAA8B,GAAhBD,EACdG,SAAS,MAEVT,EAAMiC,U,+BAiBC,IAAD,EAC6E9C,KAAKiB,MAAlFE,EADA,EACAA,cAAeD,EADf,EACeA,YAAaR,EAD5B,EAC4BA,UAAWY,EADvC,EACuCA,QAASD,EADhD,EACgDA,WAAYD,EAD5D,EAC4DA,aAE9D2B,EAAa,CAClB3C,MAAO,QACPO,OAAQO,EACRjB,SAAUD,KAAKuB,cACfrB,SAAUF,KAAKwB,cACfd,UAAWA,GAGNsC,EAAe,CACpB5C,MAAO,UACPO,OAAQQ,EACRlB,SAAUD,KAAKyB,gBACfvB,SAAUF,KAAK0B,gBACfhB,UAAWA,GAGZ,OACC,yBAAKJ,UAAU,qBACd,8CACA,yBAAKC,GAAG,iCACP,kBAAC,EAAgBwC,GACjB,kBAAC,EAAgBC,IAGlB,yBAAKzC,GAAG,oCACP,yBAAKA,GAAG,2BACP,wBAAIA,GAAG,eAAee,EAAU,QAAU,WAC1C,0BAAMf,GAAG,aACPe,EAAUtB,KAAK6B,UAAUR,GAAcrB,KAAK6B,UAAUT,KAGzD,yBAAKb,GAAG,6BACP,4BAAQA,GAAG,aAAaD,UAAWI,EAAY,QAAU,OAAQF,QAASR,KAAK2B,WAC7EjB,EAAY,QAAU,QAGxB,4BAAQH,GAAG,QAAQC,QAASR,KAAK+B,OAChC,uBAAGzB,UAAU,wB,GAvKYM,aCMjBqC,MARf,WACC,OACC,yBAAK3C,UAAU,OACd,kBAAC,EAAD,QCKiB4C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3C,SAASC,eAAe,SDyHpB,kBAAmB2C,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6c27c674.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './TimeControl.css';\n\nclass TimeControl extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleIncrease = this.handleIncrease.bind(this);\n\t\tthis.handleDecrease = this.handleDecrease.bind(this);\n\t}\n\n\thandleIncrease() {\n\t\tthis.props.increase();\n\t}\n\thandleDecrease() {\n\t\tthis.props.decrease();\n\t}\n\trender() {\n\t\tlet controlType = this.props.title.toLowerCase();\n\n\t\treturn (\n\t\t\t<div className=\"TimeControl\">\n\t\t\t\t<h1 id={`${controlType}-label`}>{this.props.title}</h1>\n\t\t\t\t<div id=\"TimeControl-customization\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tid={`${controlType}-decrement`}\n\t\t\t\t\t\tonClick={this.handleDecrease}\n\t\t\t\t\t\tdisabled={this.props.isPlaying}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-arrow-down\" />\n\t\t\t\t\t</button>\n\t\t\t\t\t<p id={`${controlType}-length`} className=\"TimeControl-length\">\n\t\t\t\t\t\t{this.props.length}\n\t\t\t\t\t</p>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid={`${controlType}-increment`}\n\t\t\t\t\t\tonClick={this.handleIncrease}\n\t\t\t\t\t\tdisabled={this.props.isPlaying}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-arrow-up\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TimeControl;\n","import React, { Component } from 'react';\nimport TimeControl from './TimeControl';\nimport './PomodoroContainer.css';\n\nconst audio = document.getElementById('beep');\n\nclass PomodoroContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tbreakLength: 5,\n\t\t\tsessionLength: 25,\n\t\t\tsessionTotal: 25 * 60,\n\t\t\tbreakTotal: 5 * 60,\n\t\t\tbreakOn: false,\n\t\t\tisPlaying: false\n\t\t};\n\t\tthis.increaseBreak = this.increaseBreak.bind(this);\n\t\tthis.decreaseBreak = this.decreaseBreak.bind(this);\n\t\tthis.increaseSession = this.increaseSession.bind(this);\n\t\tthis.decreaseSession = this.decreaseSession.bind(this);\n\t\tthis.playPause = this.playPause.bind(this);\n\n\t\tthis.timeReducer = this.timeReducer.bind(this);\n\n\t\tthis.totalTime = this.totalTime.bind(this);\n\t\tthis.changeLength = this.changeLength.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t}\n\n\tchangeLength(typeOfLength, action) {\n\t\tlet newLength = this.state[typeOfLength];\n\t\tif (action === 'increment' && newLength <= 59) {\n\t\t\tnewLength++;\n\t\t} else if (action === 'decrement' && newLength > 1) {\n\t\t\tnewLength--;\n\t\t}\n\n\t\tif (typeOfLength === 'breakLength') {\n\t\t\tthis.setState({\n\t\t\t\tbreakLength: newLength,\n\t\t\t\tbreakTotal: newLength * 60\n\t\t\t});\n\t\t} else if (typeOfLength === 'sessionLength') {\n\t\t\tthis.setState({\n\t\t\t\tsessionLength: newLength,\n\t\t\t\tsessionTotal: newLength * 60\n\t\t\t});\n\t\t}\n\t}\n\n\tincreaseBreak() {\n\t\tthis.changeLength('breakLength', 'increment');\n\t}\n\tdecreaseBreak() {\n\t\tthis.changeLength('breakLength', 'decrement');\n\t}\n\tincreaseSession() {\n\t\tthis.changeLength('sessionLength', 'increment');\n\t}\n\tdecreaseSession() {\n\t\tthis.changeLength('sessionLength', 'decrement');\n\t}\n\n\treset() {\n\t\tthis.setState({\n\t\t\tbreakLength: 5,\n\t\t\tsessionLength: 25,\n\t\t\tsessionTotal: 25 * 60,\n\t\t\tbreakTotal: 5 * 60,\n\t\t\tbreakOn: false,\n\t\t\tisPlaying: false\n\t\t});\n\t\tclearInterval(this.intervalID);\n\t\taudio.pause();\n\t\taudio.currentTime = 0;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.intervalID);\n\t}\n\tplayPause() {\n\t\tif (!this.state.isPlaying) {\n\t\t\t//this.timeReducer();\n\t\t\tthis.intervalID = setInterval(this.timeReducer, 1000);\n\t\t\tthis.setState({\n\t\t\t\tisPlaying: true\n\t\t\t});\n\t\t} else {\n\t\t\tclearInterval(this.intervalID);\n\t\t\tthis.setState({\n\t\t\t\tisPlaying: false\n\t\t\t});\n\t\t}\n\t}\n\n\ttotalTime(count) {\n\t\tlet minutes = Math.floor(count / 60);\n\t\tlet seconds = count % 60;\n\t\tseconds = seconds < 10 ? '0' + seconds : seconds;\n\t\tminutes = minutes < 10 ? '0' + minutes : minutes;\n\t\treturn `${minutes}:${seconds}`;\n\t}\n\n\ttimeReducer() {\n\t\tlet { breakLength, sessionLength, breakOn, sessionTotal, breakTotal } = this.state;\n\t\tif (!breakOn) {\n\t\t\tif (sessionTotal > 0) {\n\t\t\t\tthis.setState((state) => ({\n\t\t\t\t\tsessionTotal: state.sessionTotal - 1\n\t\t\t\t}));\n\t\t\t} else if (sessionTotal === 0) {\n\t\t\t\tthis.setState((state) => ({\n\t\t\t\t\tsessionTotal: sessionLength * 60,\n\t\t\t\t\tbreakOn: true\n\t\t\t\t}));\n\t\t\t\taudio.play();\n\t\t\t}\n\t\t} else if (breakOn) {\n\t\t\tif (breakTotal > 0) {\n\t\t\t\tthis.setState((state) => ({\n\t\t\t\t\tbreakTotal: state.breakTotal - 1\n\t\t\t\t}));\n\t\t\t} else if (breakTotal === 0) {\n\t\t\t\tthis.setState((state) => ({\n\t\t\t\t\tbreakTotal: breakLength * 60,\n\t\t\t\t\tbreakOn: false\n\t\t\t\t}));\n\t\t\t\taudio.play();\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { sessionLength, breakLength, isPlaying, breakOn, breakTotal, sessionTotal } = this.state;\n\n\t\tconst breakProps = {\n\t\t\ttitle: 'Break',\n\t\t\tlength: breakLength,\n\t\t\tincrease: this.increaseBreak,\n\t\t\tdecrease: this.decreaseBreak,\n\t\t\tisPlaying: isPlaying\n\t\t};\n\n\t\tconst sessionProps = {\n\t\t\ttitle: 'Session',\n\t\t\tlength: sessionLength,\n\t\t\tincrease: this.increaseSession,\n\t\t\tdecrease: this.decreaseSession,\n\t\t\tisPlaying: isPlaying\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"PomodoroContainer\">\n\t\t\t\t<h1>Pomodoro Clock</h1>\n\t\t\t\t<div id=\"PomodoroContainer-TimeControl\">\n\t\t\t\t\t<TimeControl {...breakProps} />\n\t\t\t\t\t<TimeControl {...sessionProps} />\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"PomodoroContainer-timerContainer\">\n\t\t\t\t\t<div id=\"PomodoroContainer-timer\">\n\t\t\t\t\t\t<h1 id=\"timer-label\">{breakOn ? 'Break' : 'Session'}</h1>\n\t\t\t\t\t\t<span id=\"time-left\">\n\t\t\t\t\t\t\t{breakOn ? this.totalTime(breakTotal) : this.totalTime(sessionTotal)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"PomodoroContainer-buttons\">\n\t\t\t\t\t\t<button id=\"start_stop\" className={isPlaying ? 'Pause' : 'Play'} onClick={this.playPause}>\n\t\t\t\t\t\t\t{isPlaying ? 'Pause' : 'Play'}\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<button id=\"reset\" onClick={this.reset}>\n\t\t\t\t\t\t\t<i className=\"fas fa-redo\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PomodoroContainer;\n","import React from 'react';\nimport './App.css';\nimport PomodoroContainer from './PomodoroContainer';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<PomodoroContainer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}